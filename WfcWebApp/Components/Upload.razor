
@inject IJSRuntime JS
@using System.Runtime.InteropServices.JavaScript
@using WfcWebApp.Utils

<h3>Upload and Display an Image</h3>

<InputFile OnChange="@OnFileChange" accept="image/*" />



@code {

    [Parameter] public EventCallback<IndexedImage> OnImageChanged { get; set; }
    private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file == null) {
            return;
        }
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);

        string imageDataBase64 = $"data:{file.ContentType};base64,{Convert.ToBase64String(buffer)}";

        var result = await JS.InvokeAsync<IndexedImage>("getIndexedImageFromBase64", imageDataBase64);

        // Run any bound callbacks
        if (OnImageChanged.HasDelegate) {
            await OnImageChanged.InvokeAsync(result);
        }
    }
}