@page "/pixel-editor"

<canvas id="drawCanvas" width="64" height="64"
        style="border: 1px solid black; image-rendering: pixelated;
               width: 512px; height: 512px;">
</canvas>

<div style="margin-top: 10px;">
    @foreach (var color in Palette)
    {
        <button style="background-color: @color; width: 32px; height: 32px; margin-right: 4px;"
                @onclick="() => SetColor(color)">
        </button>
    }
</div>

<p>Click on the canvas to draw with the selected color.</p>

@code {
    [Inject] private IJSRuntime JS { get; set; } = default!;

    private static readonly string[] Palette = new[]
    {
        "#000000", "#ffffff", "#ff0000", "#00ff00", "#0000ff", "#ffff00"
    };

    private DotNetObjectReference<PixelEditor>? dotNetRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("initCanvasDrawing", "drawCanvas", dotNetRef);
        }
    }

    private async Task SetColor(string color)
    {
        await JS.InvokeVoidAsync("setDrawColor", color);
    }

    [JSInvokable]
    public void OnCanvasDraw(int x, int y)
    {
        Console.WriteLine($"Drew at ({x}, {y})");
    }
}